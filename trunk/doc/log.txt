generating temp/doc.xml
creating rule Region Marker, #stay
creating rule Region Marker, #stay
creating rule Keyword, #stay
creating rule Extensions, #stay
creating rule Data Type, #stay
creating rule Float, #stay
creating rule Octal, #stay
creating rule Hex, #stay
creating rule Decimal, #stay
creating rule Char, #stay
creating rule String, String
creating rule Comment, Commentar 1
creating rule Comment, Commentar 2
creating rule Symbol, #stay
creating rule Symbol, #stay
creating rule Preprocessor, Outscoped
creating rule Preprocessor, Preprocessor
creating rule Function, #stay
creating rule Symbol, Member
creating rule Symbol, #stay
creating rule String, #stay
creating rule String Char, #stay
creating rule String, #pop
creating rule Function, #pop
creating rule Comment, #pop
creating rule Preprocessor, #stay
creating rule Preprocessor, Define
creating rule Preprocessor, #stay
creating rule Prep. Lib, #stay
creating rule Prep. Lib, #stay
creating rule Comment, Commentar 1
creating rule Comment, Commentar/Preprocessor
creating rule Preprocessor, #stay
creating rule Comment, #pop
creating rule Comment, Commentar 2
creating rule Comment, Outscoped intern
creating rule Preprocessor, #pop
creating rule Comment, Commentar 2
creating rule Comment, Outscoped intern
creating rule Comment, #pop
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @attribute="Preprocessor", @context="#stay">, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @attribute="Preprocessor", @context="Define">, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @attribute="Preprocessor", @context="#stay">, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @attribute="Prep. Lib", @context="#stay">, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @attribute="Prep. Lib", @context="#stay">, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @attribute="Comment", @context="Commentar 1">, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @attribute="Comment", @context="Commentar/Preprocessor">]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @attribute="Function", @context="#pop">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @attribute="Region Marker", @context="#stay">, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @attribute="Region Marker", @context="#stay">, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @attribute="Keyword", @context="#stay">, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @attribute="Extensions", @context="#stay">, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @attribute="Data Type", @context="#stay">, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @attribute="Float", @context="#stay">, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @attribute="Octal", @context="#stay">, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @attribute="Hex", @context="#stay">, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @attribute="Decimal", @context="#stay">, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @attribute="Char", @context="#stay">, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @attribute="String", @context="String">, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @attribute="Comment", @context="Commentar 1">, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @attribute="Symbol", @context="#stay">, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @attribute="Symbol", @context="#stay">, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @attribute="Preprocessor", @context="Outscoped">, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @attribute="Preprocessor", @context="Preprocessor">, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @attribute="Function", @context="#stay">, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @attribute="Symbol", @context="Member">, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @attribute="Symbol", @context="#stay">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @attribute="String", @context="#stay">, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @attribute="String Char", @context="#stay">, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @attribute="String", @context="#pop">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'luastate' (size = 8)
consuming '.' (size = 1)
consuming 'h' (size = 1)
consuming '>' (size = 1)
switching back to context Normal
rule matched using: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched namespace: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'cpplua' (size = 6)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched main: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaState' (size = 8)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched getGlobal: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'print' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pushString: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'Hello' (size = 5)
consuming ' ' (size = 1)
consuming 'World' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pcall: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 1: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched return: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=5, @attribute="Function", @context="#pop", @match="pcall">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=1, @attribute="Symbol", @context="#stay", @match="}">, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=";">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'iostream' (size = 8)
consuming '>' (size = 1)
switching back to context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'luastate' (size = 8)
consuming '.' (size = 1)
consuming 'h' (size = 1)
consuming '>' (size = 1)
switching back to context Normal
rule matched using: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched namespace: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'cpplua' (size = 6)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched main: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaState' (size = 8)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched newTable: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pushNumber: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pushNumber: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 15: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched setTable: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pushNumber: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 1: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pushNumber: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 30: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched setTable: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched for: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
consuming ' ' (size = 1)
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 2: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
rule matched +: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched +: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pushNumber: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'i' (size = 1)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched getTable: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'std' (size = 3)
rule matched ::: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched cout: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
consuming ' ' (size = 1)
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched toNumber: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
rule matched >: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'std' (size = 3)
rule matched ::: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched endl: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched pop: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched return: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=3, @attribute="Function", @context="#pop", @match="pop">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=1, @attribute="Symbol", @context="#stay", @match="}">, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=";">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'cpplua' (size = 6)
consuming '.' (size = 1)
consuming 'h' (size = 1)
consuming '>' (size = 1)
switching back to context Normal
rule matched using: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched namespace: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'cpplua' (size = 6)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched main: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaState' (size = 8)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'luaPrint' (size = 8)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched global: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'print' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched luaPrint: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'Hello' (size = 5)
consuming ' ' (size = 1)
consuming 'World' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched return: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=6, @attribute="Function", @context="#pop", @match="global">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=1, @attribute="Symbol", @context="#stay", @match="}">, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=";">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'cpplua' (size = 6)
consuming '.' (size = 1)
consuming 'h' (size = 1)
consuming '>' (size = 1)
switching back to context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'cassert' (size = 7)
consuming '>' (size = 1)
switching back to context Normal
rule matched using: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched namespace: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'cpplua' (size = 6)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched main: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaState' (size = 8)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'table' (size = 5)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched emptyTable: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched for: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
consuming ' ' (size = 1)
rule matched <: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 10: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
rule matched +: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched +: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'table' (size = 5)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'i' (size = 1)
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'i' (size = 1)
rule matched *: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'i' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'table' (size = 5)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'hello' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched -: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 1.8: Float HLight::Rule::Rule_Float
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'table2' (size = 6)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched emptyTable: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'table' (size = 5)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'table2' (size = 6)
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'A' (size = 1)
consuming ' ' (size = 1)
consuming 'table' (size = 5)
consuming ' ' (size = 1)
consuming 'index' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'table' (size = 5)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'x' (size = 1)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'table2' (size = 6)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'table2' (size = 6)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 3: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched assert: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'table' (size = 5)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'table' (size = 5)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'x' (size = 1)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 0: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 9: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=10, @attribute="Function", @context="#pop", @match="emptyTable">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=1, @attribute="Symbol", @context="#stay", @match="}">, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=";">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
rule matched #: Preprocessor HLight::Rule::Rule_RegExpr
switching to context Preprocessor
consuming 'include' (size = 7)
consuming ' ' (size = 1)
consuming '<' (size = 1)
consuming 'cpplua' (size = 6)
consuming '.' (size = 1)
consuming 'h' (size = 1)
consuming '>' (size = 1)
switching back to context Normal
rule matched using: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched namespace: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'cpplua' (size = 6)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
rule matched class: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'Dummy' (size = 5)
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'x' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched public: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
rule matched :: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched Dummy: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'x' (size = 1)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched :: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched x: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'x' (size = 1)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched add: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'y' (size = 1)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched return: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'x' (size = 1)
rule matched +: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'y' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
keeping current context Normal
rule matched int: Data Type HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
rule matched main: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaState' (size = 8)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'Dummy' (size = 5)
consuming ' ' (size = 1)
rule matched dummy: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 10: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched global: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'f' (size = 1)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched method: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'dummy' (size = 5)
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched &: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'Dummy' (size = 5)
rule matched ::: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched add: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched doString: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'temp' (size = 4)
consuming ' ' (size = 1)
consuming '=' (size = 1)
consuming ' ' (size = 1)
consuming 'f' (size = 1)
consuming '(' (size = 1)
consuming '5' (size = 1)
consuming ')' (size = 1)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched assert: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'L' (size = 1)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched global: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'temp' (size = 4)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched 15: Decimal HLight::Rule::Rule_Int
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=6, @attribute="Function", @context="#pop", @match="global">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=1, @attribute="Symbol", @context="#stay", @match="}">, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=";">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
consuming 'dummy' (size = 5)
rule matched .: Symbol HLight::Rule::Rule_RegExpr
switching to context Member
rule matched add: Function HLight::Rule::Rule_RegExpr
switching back to context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'y' (size = 1)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=3, @attribute="Function", @context="#pop", @match="add">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=")">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
rule matched dummyTable: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'key' (size = 3)
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'value' (size = 5)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
performing highlighting (rules = #<HLight::HighlightRules:0x4043f59c @keywords={"extensions"=>[#<HLight::Keyword:0x404be798 @name="K_DCOP", @type="extensions">, #<HLight::Keyword:0x404be1bc @name="SLOT", @type="extensions">, #<HLight::Keyword:0x404bdc58 @name="SIGNAL", @type="extensions">, #<HLight::Keyword:0x404bd460 @name="Q_CLASSINFO", @type="extensions">, #<HLight::Keyword:0x404bcbf0 @name="Q_ENUMS", @type="extensions">, #<HLight::Keyword:0x404bcaec @name="Q_EXPORT", @type="extensions">, #<HLight::Keyword:0x404bc9d4 @name="Q_OBJECT", @type="extensions">, #<HLight::Keyword:0x404bc8a8 @name="Q_OVERRIDE", @type="extensions">, #<HLight::Keyword:0x404bc740 @name="Q_PROPERTY", @type="extensions">, #<HLight::Keyword:0x404bc380 @name="Q_SETS", @type="extensions">, #<HLight::Keyword:0x404bc22c @name="TRUE", @type="extensions">, #<HLight::Keyword:0x404bc010 @name="FALSE", @type="extensions">, #<HLight::Keyword:0x404bbb9c @name="connect", @type="extensions">, #<HLight::Keyword:0x404bb28c @name="disconnect", @type="extensions">, #<HLight::Keyword:0x404bb174 @name="emit", @type="extensions">, #<HLight::Keyword:0x404baf08 @name="signals", @type="extensions">, #<HLight::Keyword:0x404bae04 @name="slots", @type="extensions">], "types"=>[#<HLight::Keyword:0x4047758c @name="auto", @type="types">, #<HLight::Keyword:0x40477438 @name="bool", @type="types">, #<HLight::Keyword:0x404772bc @name="char", @type="types">, #<HLight::Keyword:0x404771b8 @name="const", @type="types">, #<HLight::Keyword:0x4047708c @name="double", @type="types">, #<HLight::Keyword:0x40476f60 @name="float", @type="types">, #<HLight::Keyword:0x40476df8 @name="int", @type="types">, #<HLight::Keyword:0x40476c7c @name="long", @type="types">, #<HLight::Keyword:0x40476b78 @name="mutable", @type="types">, #<HLight::Keyword:0x40476a4c @name="register", @type="types">, #<HLight::Keyword:0x40476894 @name="short", @type="types">, #<HLight::Keyword:0x40476768 @name="signed", @type="types">, #<HLight::Keyword:0x404765b0 @name="static", @type="types">, #<HLight::Keyword:0x40476484 @name="unsigned", @type="types">, #<HLight::Keyword:0x40476358 @name="void", @type="types">, #<HLight::Keyword:0x40476254 @name="volatile", @type="types">, #<HLight::Keyword:0x40476128 @name="uchar", @type="types">, #<HLight::Keyword:0x40475ffc @name="uint", @type="types">, #<HLight::Keyword:0x40475df4 @name="int8_t", @type="types">, #<HLight::Keyword:0x40475cc8 @name="int16_t", @type="types">, #<HLight::Keyword:0x40475b9c @name="int32_t", @type="types">, #<HLight::Keyword:0x40475a34 @name="int64_t", @type="types">, #<HLight::Keyword:0x404758b8 @name="uint8_t", @type="types">, #<HLight::Keyword:0x404757b4 @name="uint16_t", @type="types">, #<HLight::Keyword:0x40475688 @name="uint32_t", @type="types">, #<HLight::Keyword:0x404754d0 @name="uint64_t", @type="types">, #<HLight::Keyword:0x404753a4 @name="wchar_t", @type="types">], "keywords"=>[#<HLight::Keyword:0x40370a08 @name="asm", @type="keywords">, #<HLight::Keyword:0x403702b0 @name="break", @type="keywords">, #<HLight::Keyword:0x4036fba8 @name="case", @type="keywords">, #<HLight::Keyword:0x4036f43c @name="catch", @type="keywords">, #<HLight::Keyword:0x4036e834 @name="class", @type="keywords">, #<HLight::Keyword:0x4036de20 @name="const_cast", @type="keywords">, #<HLight::Keyword:0x4036d36c @name="continue", @type="keywords">, #<HLight::Keyword:0x4036d088 @name="default", @type="keywords">, #<HLight::Keyword:0x4036cdcc @name="delete", @type="keywords">, #<HLight::Keyword:0x4036c688 @name="do", @type="keywords">, #<HLight::Keyword:0x4036bb84 @name="dynamic_cast", @type="keywords">, #<HLight::Keyword:0x40369b68 @name="else", @type="keywords">, #<HLight::Keyword:0x40368fec @name="enum", @type="keywords">, #<HLight::Keyword:0x403683d0 @name="explicit", @type="keywords">, #<HLight::Keyword:0x403679bc @name="export", @type="keywords">, #<HLight::Keyword:0x40366df0 @name="extern", @type="keywords">, #<HLight::Keyword:0x403660a8 @name="false", @type="keywords">, #<HLight::Keyword:0x4036548c @name="friend", @type="keywords">, #<HLight::Keyword:0x403647f8 @name="for", @type="keywords">, #<HLight::Keyword:0x4036417c @name="goto", @type="keywords">, #<HLight::Keyword:0x40362bb0 @name="if", @type="keywords">, #<HLight::Keyword:0x40360d10 @name="inline", @type="keywords">, #<HLight::Keyword:0x4035ff64 @name="namespace", @type="keywords">, #<HLight::Keyword:0x4035f398 @name="new", @type="keywords">, #<HLight::Keyword:0x4035e920 @name="operator", @type="keywords">, #<HLight::Keyword:0x4035da0c @name="private", @type="keywords">, #<HLight::Keyword:0x4035cae4 @name="protected", @type="keywords">, #<HLight::Keyword:0x4035c738 @name="public", @type="keywords">, #<HLight::Keyword:0x4035b84c @name="reinterpret_cast", @type="keywords">, #<HLight::Keyword:0x4035aa28 @name="return", @type="keywords">, #<HLight::Keyword:0x40359f10 @name="sizeof", @type="keywords">, #<HLight::Keyword:0x40358fd4 @name="static_cast", @type="keywords">, #<HLight::Keyword:0x40356e64 @name="struct", @type="keywords">, #<HLight::Keyword:0x40356694 @name="switch", @type="keywords">, #<HLight::Keyword:0x403557e4 @name="template", @type="keywords">, #<HLight::Keyword:0x40354bdc @name="this", @type="keywords">, #<HLight::Keyword:0x40353db8 @name="throw", @type="keywords">, #<HLight::Keyword:0x40352ff8 @name="true", @type="keywords">, #<HLight::Keyword:0x40352490 @name="try", @type="keywords">, #<HLight::Keyword:0x40350ed8 @name="typedef", @type="keywords">, #<HLight::Keyword:0x40350168 @name="typeid", @type="keywords">, #<HLight::Keyword:0x4034ea48 @name="type_info", @type="keywords">, #<HLight::Keyword:0x4034dc88 @name="typename", @type="keywords">, #<HLight::Keyword:0x4034ce14 @name="union", @type="keywords">, #<HLight::Keyword:0x4034bab4 @name="using", @type="keywords">, #<HLight::Keyword:0x4034a970 @name="virtual", @type="keywords">, #<HLight::Keyword:0x40349714 @name="while", @type="keywords">, #<HLight::Keyword:0x40348a58 @name="and", @type="keywords">, #<HLight::Keyword:0x40347ab8 @name="and_eq", @type="keywords">, #<HLight::Keyword:0x403466a4 @name="bad_cast", @type="keywords">, #<HLight::Keyword:0x40345434 @name="bad_typeid", @type="keywords">, #<HLight::Keyword:0x40343a80 @name="bitand", @type="keywords">, #<HLight::Keyword:0x403429dc @name="bitor", @type="keywords">, #<HLight::Keyword:0x403415a0 @name="compl", @type="keywords">, #<HLight::Keyword:0x40340470 @name="not", @type="keywords">, #<HLight::Keyword:0x4033f610 @name="not_eq", @type="keywords">, #<HLight::Keyword:0x4033e738 @name="or", @type="keywords">, #<HLight::Keyword:0x4033d964 @name="or_eq", @type="keywords">, #<HLight::Keyword:0x4033cab4 @name="xor", @type="keywords">, #<HLight::Keyword:0x4033beac @name="xor_eq", @type="keywords">, #<HLight::Keyword:0x4033ac3c @name="except", @type="keywords">, #<HLight::Keyword:0x4033a3cc @name="finally", @type="keywords">, #<HLight::Keyword:0x40339274 @name="xalloc", @type="keywords">]}, @contexts={"Outscoped intern"=>#<HLight::HighlightRules::Context:0x404561fc @line_end_context="#stay", @name="Outscoped intern", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40455b94 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_RegExpr:0x404556f8 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40455144 @re=/^\s*#\s*endif/, @attribute="Comment", @context="#pop">]>, "Commentar/Preprocessor"=>#<HLight::HighlightRules::Context:0x404582f4 @line_end_context="#stay", @name="Commentar/Preprocessor", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457c8c @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Preprocessor"=>#<HLight::HighlightRules::Context:0x4045b648 @line_end_context="#pop", @name="Preprocessor", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045aff4 @re=/\\$/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045ad74 @re=/define.*((?=\\))/, @size=nil, @attribute="Preprocessor", @context="Define", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045a7d4 @re=/define.*/, @size=nil, @attribute="Preprocessor", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x4045a234 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RangeDetect:0x40459b68 @re=/char.*char1/, @size=nil, @attribute="Prep. Lib", @context="#stay", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40459488>, #<HLight::Rule::Rule_Detect2Chars:0x40459398 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40458f60 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar/Preprocessor", @match=nil>]>, "Member"=>#<HLight::HighlightRules::Context:0x4045d588 @line_end_context="#pop", @name="Member", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x4045ce1c @re=/\b[_\w][_\w\d]*(?=[\s]*)/, @size=3, @attribute="Function", @context="#pop", @match="add">]>, "Define"=>#<HLight::HighlightRules::Context:0x40458b78 @line_end_context="#pop", @name="Define", @attribute="Preprocessor", @rules=[#<HLight::Rule::Rule_LineContinue:0x404584fc @re=/\\$/, @attribute="Preprocessor", @context="#stay">]>, "Commentar 1"=>#<HLight::HighlightRules::Context:0x4045c8e0 @line_end_context="#pop", @name="Commentar 1", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045c23c>]>, "Commentar 2"=>#<HLight::HighlightRules::Context:0x4045c1c4 @line_end_context="#stay", @name="Commentar 2", @attribute="Comment", @rules=[#<HLight::Rule::Rule_IncludeRules:0x4045bb48>, #<HLight::Rule::Rule_Detect2Chars:0x4045ba44 @re=/\*\//, @attribute="Comment", @context="#pop">]>, "Normal"=>#<HLight::HighlightRules::Context:0x404651c0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_RegExpr:0x40464b58 @re=/\/\/\s*BEGIN.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404645b8 @re=/\/\/\s*END.*$/, @size=nil, @attribute="Region Marker", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40464018 @re=/(asm\b|break\b|case\b|catch\b|class\b|const_cast\b|continue\b|default\b|delete\b|do\b|dynamic_cast\b|else\b|enum\b|explicit\b|export\b|extern\b|false\b|friend\b|for\b|goto\b|if\b|inline\b|namespace\b|new\b|operator\b|private\b|protected\b|public\b|reinterpret_cast\b|return\b|sizeof\b|static_cast\b|struct\b|switch\b|template\b|this\b|throw\b|true\b|try\b|typedef\b|typeid\b|type_info\b|typename\b|union\b|using\b|virtual\b|while\b|and\b|and_eq\b|bad_cast\b|bad_typeid\b|bitand\b|bitor\b|compl\b|not\b|not_eq\b|or\b|or_eq\b|xor\b|xor_eq\b|except\b|finally\b|xalloc\b)/, @size=nil, @attribute="Keyword", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40463294 @re=/(K_DCOP\b|SLOT\b|SIGNAL\b|Q_CLASSINFO\b|Q_ENUMS\b|Q_EXPORT\b|Q_OBJECT\b|Q_OVERRIDE\b|Q_PROPERTY\b|Q_SETS\b|TRUE\b|FALSE\b|connect\b|disconnect\b|emit\b|signals\b|slots\b)/, @size=nil, @attribute="Extensions", @context="#stay", @match=nil>, #<HLight::Rule::Rule_keyword:0x40462c40 @re=/(auto\b|bool\b|char\b|const\b|double\b|float\b|int\b|long\b|mutable\b|register\b|short\b|signed\b|static\b|unsigned\b|void\b|volatile\b|uchar\b|uint\b|int8_t\b|int16_t\b|int32_t\b|int64_t\b|uint8_t\b|uint16_t\b|uint32_t\b|uint64_t\b|wchar_t\b)/, @size=nil, @attribute="Data Type", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Float:0x4046245c @re=/[0-9]*\.[0-9]+([eE][-+]?[0-9]+)?/, @size=nil, @attribute="Float", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCOct:0x404621dc @re=/0[0-7]+(L|U)?/, @size=nil, @attribute="Octal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCHex:0x40461f5c @re=/0x[0-9a-fA-F]+(L|U)?/, @size=nil, @attribute="Hex", @context="#stay", @match=nil>, #<HLight::Rule::Rule_Int:0x40461cdc @re=/[0-9]+/, @size=nil, @attribute="Decimal", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCChar:0x40461a5c @re=/'.'/, @size=nil, @attribute="Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404617dc @re=/"/, @size=nil, @attribute="String", @context="String", @match=nil>, #<HLight::Rule::Rule_IncludeRules:0x40461340>, #<HLight::Rule::Rule_Detect2Chars:0x40461250 @re=/\/\//, @size=nil, @attribute="Comment", @context="Commentar 1", @match=nil>, #<HLight::Rule::Rule_Detect2Chars:0x40460e18 @re=/\/\*/, @size=nil, @attribute="Comment", @context="Commentar 2", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x404609cc @re=/\{/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x40460648 @re=/\}/, @size=nil, @attribute="Symbol", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x404602c4 @re=/^\s*#\s*if\s+0/, @size=nil, @attribute="Preprocessor", @context="Outscoped", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045fcfc @re=/^\s*#/, @size=nil, @attribute="Preprocessor", @context="Preprocessor", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f720 @re=/\b[_\w][_\d\w]*(?=[\s]*[(])/, @size=nil, @attribute="Function", @context="#stay", @match=nil>, #<HLight::Rule::Rule_RegExpr:0x4045f144 @re=/([.]{1,1}|[:]{2,2})/, @size=nil, @attribute="Symbol", @context="Member", @match=nil>, #<HLight::Rule::Rule_AnyChar:0x4045eb7c @re=/[:!%&\(\)\+,\-\/\.\*<=>\?\[\]\{\|\}~\^;]/, @size=1, @attribute="Symbol", @context="#stay", @match=")">]>, "Outscoped"=>#<HLight::HighlightRules::Context:0x4045787c @line_end_context="#stay", @name="Outscoped", @attribute="Comment", @rules=[#<HLight::Rule::Rule_Detect2Chars:0x40457200 @re=/\/\*/, @attribute="Comment", @context="Commentar 2">, #<HLight::Rule::Rule_IncludeRules:0x40456db4>, #<HLight::Rule::Rule_RegExpr:0x40456cc4 @re=/^\s*#\s*if/, @attribute="Comment", @context="Outscoped intern">, #<HLight::Rule::Rule_RegExpr:0x40456724 @re=/^\s*#\s*(endif|else|elif)/, @attribute="Preprocessor", @context="#pop">]>, "String"=>#<HLight::HighlightRules::Context:0x4045e4ec @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_LineContinue:0x4045de48 @re=/\\$/, @size=nil, @attribute="String", @context="#stay", @match=nil>, #<HLight::Rule::Rule_HlCStringChar:0x4045dba0 @re=/\\[abefnrtv"'?\\]/, @size=nil, @attribute="String Char", @context="#stay", @match=nil>, #<HLight::Rule::Rule_DetectChar:0x4045d920 @re=/"/, @size=1, @attribute="String", @context="#pop", @match="\"">]>}, @itemdata={"Char"=>"dsChar", "Octal"=>"dsBaseN", "Symbol"=>"dsNormal", "Comment"=>"dsComment", "Preprocessor"=>"dsOthers", "String Char"=>"dsChar", "Hex"=>"dsBaseN", "Data Type"=>"dsDataType", "Region Marker"=>"dsRegionMarker", "Float"=>"dsFloat", "Decimal"=>"dsDecVal", "Function"=>"dsFunction", "Normal Text"=>"dsNormal", "Extensions"=>"dsKeyword", "Keyword"=>"dsKeyword", "Prep. Lib"=>"dsOthers", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
rule matched dummyTable: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'LuaState' (size = 8)
rule matched *: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'key' (size = 3)
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'value' (size = 5)
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched {: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'LuaObject' (size = 9)
consuming ' ' (size = 1)
consuming 'res' (size = 3)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'L' (size = 1)
rule matched -: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched >: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched emptyTable: Function HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
consuming 'res' (size = 3)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 'key' (size = 3)
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'value' (size = 5)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
consuming ' ' (size = 1)
consuming ' ' (size = 1)
rule matched return: Keyword HLight::Rule::Rule_keyword
keeping current context Normal
consuming ' ' (size = 1)
consuming 'res' (size = 3)
rule matched ;: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched }: Symbol HLight::Rule::Rule_DetectChar
keeping current context Normal
keeping current context Normal
creating rule Keyword, #stay
creating rule BaseFunc, #stay
creating rule Char, #stay
creating rule Comment, Commentar
creating rule Comment, Commentar
creating rule String, String
creating rule Symbol, #stay
creating rule Number, #stay
creating rule Alert, #stay
creating rule String, #pop
performing highlighting (rules = #<HLight::HighlightRules:0x4043e64c @keywords={"basefunc"=>[#<HLight::Keyword:0x40490ab4 @name="string.byte", @type="basefunc">, #<HLight::Keyword:0x40490564 @name="string.char", @type="basefunc">, #<HLight::Keyword:0x404902d0 @name="string.find", @type="basefunc">, #<HLight::Keyword:0x4048ff10 @name="string.len", @type="basefunc">, #<HLight::Keyword:0x4048f9e8 @name="string.lower", @type="basefunc">, #<HLight::Keyword:0x4048f600 @name="string.rep", @type="basefunc">, #<HLight::Keyword:0x4048f36c @name="string.sub", @type="basefunc">, #<HLight::Keyword:0x4048efd4 @name="string.upper", @type="basefunc">, #<HLight::Keyword:0x4048ec14 @name="string.format", @type="basefunc">, #<HLight::Keyword:0x4048e2c8 @name="string.gfind", @type="basefunc">, #<HLight::Keyword:0x4048e1b0 @name="string.gsub", @type="basefunc">, #<HLight::Keyword:0x4048deb8 @name="table.concat", @type="basefunc">, #<HLight::Keyword:0x4048dabc @name="table.foreach", @type="basefunc">, #<HLight::Keyword:0x4048d954 @name="table.foreachi", @type="basefunc">, #<HLight::Keyword:0x4048d2ec @name="table.getn", @type="basefunc">, #<HLight::Keyword:0x4048ce50 @name="table.sort", @type="basefunc">, #<HLight::Keyword:0x4048cc34 @name="table.insert", @type="basefunc">, #<HLight::Keyword:0x4048c6d0 @name="table.remove", @type="basefunc">, #<HLight::Keyword:0x4048c478 @name="table.setn", @type="basefunc">, #<HLight::Keyword:0x4048bc1c @name="math.abs", @type="basefunc">, #<HLight::Keyword:0x4048b794 @name="math.sin", @type="basefunc">, #<HLight::Keyword:0x4048b460 @name="math.cos", @type="basefunc">, #<HLight::Keyword:0x4048ae34 @name="math.tan", @type="basefunc">, #<HLight::Keyword:0x4048a86c @name="math.asin", @type="basefunc">, #<HLight::Keyword:0x4048a6b4 @name="math.acos", @type="basefunc">, #<HLight::Keyword:0x4048a3bc @name="math.atan", @type="basefunc">, #<HLight::Keyword:0x4048a204 @name="math.atan2", @type="basefunc">, #<HLight::Keyword:0x40489e80 @name="math.ceil", @type="basefunc">, #<HLight::Keyword:0x40489cf0 @name="math.floor", @type="basefunc">, #<HLight::Keyword:0x404898cc @name="math.mod", @type="basefunc">, #<HLight::Keyword:0x404895d4 @name="math.frexp", @type="basefunc">, #<HLight::Keyword:0x4048941c @name="math.ldexp", @type="basefunc">, #<HLight::Keyword:0x40488f30 @name="math.squrt", @type="basefunc">, #<HLight::Keyword:0x40487360 @name="math.min", @type="basefunc">, #<HLight::Keyword:0x4048711c @name="math.max", @type="basefunc">, #<HLight::Keyword:0x40486d84 @name="math.log", @type="basefunc">, #<HLight::Keyword:0x40486960 @name="math.log10", @type="basefunc">, #<HLight::Keyword:0x404867a8 @name="math.exp", @type="basefunc">, #<HLight::Keyword:0x40486488 @name="math.deg", @type="basefunc">, #<HLight::Keyword:0x40485eac @name="math.rad", @type="basefunc">, #<HLight::Keyword:0x40485b28 @name="math.random", @type="basefunc">, #<HLight::Keyword:0x40485a10 @name="math.randomseed", @type="basefunc">, #<HLight::Keyword:0x4048590c @name="io.close", @type="basefunc">, #<HLight::Keyword:0x40485808 @name="io.flush", @type="basefunc">, #<HLight::Keyword:0x40485704 @name="io.input", @type="basefunc">, #<HLight::Keyword:0x40485600 @name="io.lines", @type="basefunc">, #<HLight::Keyword:0x404854e8 @name="io.open", @type="basefunc">, #<HLight::Keyword:0x40485394 @name="io.output", @type="basefunc">, #<HLight::Keyword:0x40485290 @name="io.read", @type="basefunc">, #<HLight::Keyword:0x4048518c @name="io.stderr", @type="basefunc">, #<HLight::Keyword:0x40485088 @name="io.stdin", @type="basefunc">, #<HLight::Keyword:0x40484f84 @name="io.stdout", @type="basefunc">, #<HLight::Keyword:0x40484b10 @name="io.tmpfile", @type="basefunc">, #<HLight::Keyword:0x40484778 @name="io.write", @type="basefunc">, #<HLight::Keyword:0x40484610 @name="os.clock", @type="basefunc">, #<HLight::Keyword:0x404844e4 @name="os.date", @type="basefunc">, #<HLight::Keyword:0x404843e0 @name="os.difftime", @type="basefunc">, #<HLight::Keyword:0x404842dc @name="os.execute", @type="basefunc">, #<HLight::Keyword:0x404841d8 @name="os.exit", @type="basefunc">, #<HLight::Keyword:0x404840d4 @name="os.getenv", @type="basefunc">, #<HLight::Keyword:0x40483e68 @name="os.remove", @type="basefunc">, #<HLight::Keyword:0x40483bc0 @name="os.rename", @type="basefunc">, #<HLight::Keyword:0x40483aa8 @name="os.setlocale", @type="basefunc">, #<HLight::Keyword:0x4048397c @name="os.time", @type="basefunc">, #<HLight::Keyword:0x40483878 @name="os.tmpname", @type="basefunc">, #<HLight::Keyword:0x40483738 @name="debug.getinfo", @type="basefunc">, #<HLight::Keyword:0x404835a8 @name="debug.getlocal", @type="basefunc">, #<HLight::Keyword:0x4048347c @name="debug.setlocal", @type="basefunc">, #<HLight::Keyword:0x404832c4 @name="debug.sethook", @type="basefunc">, #<HLight::Keyword:0x40483198 @name="debug.gethook", @type="basefunc">, #<HLight::Keyword:0x40482fe0 @name="assert", @type="basefunc">, #<HLight::Keyword:0x40482eb4 @name="collectgarbage", @type="basefunc">, #<HLight::Keyword:0x40482db0 @name="dofile", @type="basefunc">, #<HLight::Keyword:0x40482c84 @name="error", @type="basefunc">, #<HLight::Keyword:0x40482acc @name="next", @type="basefunc">, #<HLight::Keyword:0x404829a0 @name="print", @type="basefunc">, #<HLight::Keyword:0x40482874 @name="rawget", @type="basefunc">, #<HLight::Keyword:0x404826bc @name="rawset", @type="basefunc">, #<HLight::Keyword:0x40482590 @name="tonumber", @type="basefunc">, #<HLight::Keyword:0x40482478 @name="tostring", @type="basefunc">, #<HLight::Keyword:0x40482248 @name="type", @type="basefunc">, #<HLight::Keyword:0x4048211c @name="_ALERT", @type="basefunc">, #<HLight::Keyword:0x40482004 @name="_ERRORMESSAGE", @type="basefunc">, #<HLight::Keyword:0x40481eec @name="call", @type="basefunc">, #<HLight::Keyword:0x40481d5c @name="copytagmethods", @type="basefunc">, #<HLight::Keyword:0x40481b7c @name="dostring", @type="basefunc">, #<HLight::Keyword:0x40481a78 @name="foreach", @type="basefunc">, #<HLight::Keyword:0x4048194c @name="foreachi", @type="basefunc">, #<HLight::Keyword:0x40481834 @name="getglobal", @type="basefunc">, #<HLight::Keyword:0x40481604 @name="getn", @type="basefunc">, #<HLight::Keyword:0x404814d8 @name="gettagmethod", @type="basefunc">, #<HLight::Keyword:0x404813ac @name="globals", @type="basefunc">, #<HLight::Keyword:0x404812a8 @name="newtag", @type="basefunc">, #<HLight::Keyword:0x4048117c @name="setglobal", @type="basefunc">, #<HLight::Keyword:0x40480fc4 @name="settag", @type="basefunc">, #<HLight::Keyword:0x40480e98 @name="settagmethod", @type="basefunc">, #<HLight::Keyword:0x40480ce0 @name="sort", @type="basefunc">, #<HLight::Keyword:0x40480bb4 @name="tag", @type="basefunc">, #<HLight::Keyword:0x40480ab0 @name="tinsert", @type="basefunc">, #<HLight::Keyword:0x40480984 @name="tremove", @type="basefunc">, #<HLight::Keyword:0x404807cc @name="openfile", @type="basefunc">, #<HLight::Keyword:0x404806a0 @name="closefile", @type="basefunc">, #<HLight::Keyword:0x4048059c @name="flush", @type="basefunc">, #<HLight::Keyword:0x4048045c @name="seek", @type="basefunc">, #<HLight::Keyword:0x404802a4 @name="setlocale", @type="basefunc">, #<HLight::Keyword:0x40480164 @name="execute", @type="basefunc">, #<HLight::Keyword:0x4047ffac @name="remove", @type="basefunc">, #<HLight::Keyword:0x4047fea8 @name="rename", @type="basefunc">, #<HLight::Keyword:0x4047fd7c @name="tmpname", @type="basefunc">, #<HLight::Keyword:0x4047fbc4 @name="getenv", @type="basefunc">, #<HLight::Keyword:0x4047fa98 @name="date", @type="basefunc">, #<HLight::Keyword:0x4047f96c @name="clock", @type="basefunc">, #<HLight::Keyword:0x4047f804 @name="exit", @type="basefunc">, #<HLight::Keyword:0x4047f688 @name="readfrom", @type="basefunc">, #<HLight::Keyword:0x4047f584 @name="writeto", @type="basefunc">, #<HLight::Keyword:0x4047f458 @name="appendto", @type="basefunc">, #<HLight::Keyword:0x4047f32c @name="read", @type="basefunc">, #<HLight::Keyword:0x4047f228 @name="write", @type="basefunc">, #<HLight::Keyword:0x4047f0ac @name="abs", @type="basefunc">, #<HLight::Keyword:0x4047eecc @name="sin", @type="basefunc">, #<HLight::Keyword:0x4047edc8 @name="cos", @type="basefunc">, #<HLight::Keyword:0x4047ec9c @name="tan", @type="basefunc">, #<HLight::Keyword:0x4047eae4 @name="asin", @type="basefunc">, #<HLight::Keyword:0x4047e9b8 @name="acos", @type="basefunc">, #<HLight::Keyword:0x4047e800 @name="atan", @type="basefunc">, #<HLight::Keyword:0x4047e6d4 @name="atan2", @type="basefunc">, #<HLight::Keyword:0x4047e5a8 @name="ceil", @type="basefunc">, #<HLight::Keyword:0x4047e4a4 @name="floor", @type="basefunc">, #<HLight::Keyword:0x4047e378 @name="mod", @type="basefunc">, #<HLight::Keyword:0x4047e1c0 @name="frexp", @type="basefunc">, #<HLight::Keyword:0x4047e094 @name="ldexp", @type="basefunc">, #<HLight::Keyword:0x4047dedc @name="squrt", @type="basefunc">, #<HLight::Keyword:0x4047ddb0 @name="min", @type="basefunc">, #<HLight::Keyword:0x4047dc84 @name="max", @type="basefunc">, #<HLight::Keyword:0x4047db1c @name="log", @type="basefunc">, #<HLight::Keyword:0x4047d9a0 @name="log10", @type="basefunc">, #<HLight::Keyword:0x4047d89c @name="exp", @type="basefunc">, #<HLight::Keyword:0x4047d770 @name="deg", @type="basefunc">, #<HLight::Keyword:0x4047d644 @name="rad", @type="basefunc">, #<HLight::Keyword:0x4047d540 @name="random", @type="basefunc">, #<HLight::Keyword:0x4047d374 @name="randomseed", @type="basefunc">, #<HLight::Keyword:0x4047d1e4 @name="strlen", @type="basefunc">, #<HLight::Keyword:0x4047d0e0 @name="strsub", @type="basefunc">, #<HLight::Keyword:0x4047cfb4 @name="strlower", @type="basefunc">, #<HLight::Keyword:0x4047cdfc @name="strupper", @type="basefunc">, #<HLight::Keyword:0x4047ccd0 @name="strchar", @type="basefunc">, #<HLight::Keyword:0x4047cb18 @name="strrep", @type="basefunc">, #<HLight::Keyword:0x4047c9ec @name="ascii", @type="basefunc">, #<HLight::Keyword:0x4047c8c0 @name="strbyte", @type="basefunc">, #<HLight::Keyword:0x4047c708 @name="format", @type="basefunc">, #<HLight::Keyword:0x4047c5dc @name="strfind", @type="basefunc">, #<HLight::Keyword:0x4047c4d8 @name="gsub", @type="basefunc">, #<HLight::Keyword:0x4047c3ac @name="getinfo", @type="basefunc">, #<HLight::Keyword:0x4047c1f4 @name="getlocal", @type="basefunc">, #<HLight::Keyword:0x4047c0c8 @name="setlocal", @type="basefunc">, #<HLight::Keyword:0x4047bf9c @name="setcallhook", @type="basefunc">, #<HLight::Keyword:0x4047be98 @name="setlinehook", @type="basefunc">, #<HLight::Keyword:0x4047bd6c @name="getglobals", @type="basefunc">, #<HLight::Keyword:0x4047bbb4 @name="getmetatable", @type="basefunc">, #<HLight::Keyword:0x4047ba88 @name="gcinfo", @type="basefunc">, #<HLight::Keyword:0x4047b95c @name="ipairs", @type="basefunc">, #<HLight::Keyword:0x4047b7a4 @name="loadfile", @type="basefunc">, #<HLight::Keyword:0x4047b678 @name="loadstring", @type="basefunc">, #<HLight::Keyword:0x4047b4c0 @name="pairs", @type="basefunc">, #<HLight::Keyword:0x4047b394 @name="pcall", @type="basefunc">, #<HLight::Keyword:0x4047b27c @name="require", @type="basefunc">, #<HLight::Keyword:0x4047b164 @name="setglobals", @type="basefunc">, #<HLight::Keyword:0x4047afd4 @name="setmetatable", @type="basefunc">, #<HLight::Keyword:0x4047adf4 @name="unpack", @type="basefunc">, #<HLight::Keyword:0x4047acf0 @name="LUA_PATH", @type="basefunc">, #<HLight::Keyword:0x4047abc4 @name="_LOADED", @type="basefunc">, #<HLight::Keyword:0x4047aaac @name="_VERSION", @type="basefunc">], "keywords"=>[#<HLight::Keyword:0x403cd398 @name="and", @type="keywords">, #<HLight::Keyword:0x403cd2a8 @name="end", @type="keywords">, #<HLight::Keyword:0x403cd1a4 @name="local", @type="keywords">, #<HLight::Keyword:0x403cd0a0 @name="return", @type="keywords">, #<HLight::Keyword:0x403ccf9c @name="break", @type="keywords">, #<HLight::Keyword:0x403cce98 @name="for", @type="keywords">, #<HLight::Keyword:0x403ccd94 @name="do", @type="keywords">, #<HLight::Keyword:0x403ccc90 @name="if", @type="keywords">, #<HLight::Keyword:0x403ccb8c @name="nil", @type="keywords">, #<HLight::Keyword:0x403cca88 @name="then", @type="keywords">, #<HLight::Keyword:0x403cc984 @name="function", @type="keywords">, #<HLight::Keyword:0x403cc880 @name="not", @type="keywords">, #<HLight::Keyword:0x403cc77c @name="until", @type="keywords">, #<HLight::Keyword:0x403cc678 @name="else", @type="keywords">, #<HLight::Keyword:0x403cc574 @name="or", @type="keywords">, #<HLight::Keyword:0x403cc470 @name="while", @type="keywords">, #<HLight::Keyword:0x403cc36c @name="elsif", @type="keywords">, #<HLight::Keyword:0x403cc268 @name="in", @type="keywords">, #<HLight::Keyword:0x403cc164 @name="repeat", @type="keywords">]}, @contexts={"Normal"=>#<HLight::HighlightRules::Context:0x40472dc0 @line_end_context="#stay", @name="Normal", @attribute="Normal Text", @rules=[#<HLight::Rule::Rule_keyword:0x40472550 @re=/(and\b|end\b|local\b|return\b|break\b|for\b|do\b|if\b|nil\b|then\b|function\b|not\b|until\b|else\b|or\b|while\b|elsif\b|in\b|repeat\b)/, @attribute="Keyword", @context="#stay">, #<HLight::Rule::Rule_keyword:0x40471c90 @re=/(string\.byte\b|string\.char\b|string\.find\b|string\.len\b|string\.lower\b|string\.rep\b|string\.sub\b|string\.upper\b|string\.format\b|string\.gfind\b|string\.gsub\b|table\.concat\b|table\.foreach\b|table\.foreachi\b|table\.getn\b|table\.sort\b|table\.insert\b|table\.remove\b|table\.setn\b|math\.abs\b|math\.sin\b|math\.cos\b|math\.tan\b|math\.asin\b|math\.acos\b|math\.atan\b|math\.atan2\b|math\.ceil\b|math\.floor\b|math\.mod\b|math\.frexp\b|math\.ldexp\b|math\.squrt\b|math\.min\b|math\.max\b|math\.log\b|math\.log10\b|math\.exp\b|math\.deg\b|math\.rad\b|math\.random\b|math\.randomseed\b|io\.close\b|io\.flush\b|io\.input\b|io\.lines\b|io\.open\b|io\.output\b|io\.read\b|io\.stderr\b|io\.stdin\b|io\.stdout\b|io\.tmpfile\b|io\.write\b|os\.clock\b|os\.date\b|os\.difftime\b|os\.execute\b|os\.exit\b|os\.getenv\b|os\.remove\b|os\.rename\b|os\.setlocale\b|os\.time\b|os\.tmpname\b|debug\.getinfo\b|debug\.getlocal\b|debug\.setlocal\b|debug\.sethook\b|debug\.gethook\b|assert\b|collectgarbage\b|dofile\b|error\b|next\b|print\b|rawget\b|rawset\b|tonumber\b|tostring\b|type\b|_ALERT\b|_ERRORMESSAGE\b|call\b|copytagmethods\b|dostring\b|foreach\b|foreachi\b|getglobal\b|getn\b|gettagmethod\b|globals\b|newtag\b|setglobal\b|settag\b|settagmethod\b|sort\b|tag\b|tinsert\b|tremove\b|openfile\b|closefile\b|flush\b|seek\b|setlocale\b|execute\b|remove\b|rename\b|tmpname\b|getenv\b|date\b|clock\b|exit\b|readfrom\b|writeto\b|appendto\b|read\b|write\b|abs\b|sin\b|cos\b|tan\b|asin\b|acos\b|atan\b|atan2\b|ceil\b|floor\b|mod\b|frexp\b|ldexp\b|squrt\b|min\b|max\b|log\b|log10\b|exp\b|deg\b|rad\b|random\b|randomseed\b|strlen\b|strsub\b|strlower\b|strupper\b|strchar\b|strrep\b|ascii\b|strbyte\b|format\b|strfind\b|gsub\b|getinfo\b|getlocal\b|setlocal\b|setcallhook\b|setlinehook\b|getglobals\b|getmetatable\b|gcinfo\b|ipairs\b|loadfile\b|loadstring\b|pairs\b|pcall\b|require\b|setglobals\b|setmetatable\b|unpack\b|LUA_PATH\b|_LOADED\b|_VERSION\b)/, @attribute="BaseFunc", @context="#stay">, #<HLight::Rule::Rule_HlCChar:0x4046ec70 @re=/'.'/, @attribute="Char", @context="#stay">, #<HLight::Rule::Rule_Detect2Chars:0x4046e914 @re=/\-\-/, @attribute="Comment", @context="Commentar">, #<HLight::Rule::Rule_DetectChar:0x4046e388 @re=/\#/, @attribute="Comment", @context="Commentar">, #<HLight::Rule::Rule_DetectChar:0x4046de9c @re=/"/, @attribute="String", @context="String">, #<HLight::Rule::Rule_AnyChar:0x4046d870 @re=/[!%&\(\)\+,\-<=>\?\[\]\^\{\|\}~]/, @attribute="Symbol", @context="#stay">, #<HLight::Rule::Rule_RegExpr:0x4046d03c @re=/[0-9]*\.?[0-9]*e?[0-9]+/, @attribute="Number", @context="#stay">]>, "Commentar"=>#<HLight::HighlightRules::Context:0x4046c9e8 @line_end_context="#pop", @name="Commentar", @attribute="Comment", @rules=[#<HLight::Rule::Rule_RegExpr:0x4046c1c8 @re=/(FIXME|TODO)/, @attribute="Alert", @context="#stay">]>, "String"=>#<HLight::HighlightRules::Context:0x4046ba5c @line_end_context="#pop", @name="String", @attribute="String", @rules=[#<HLight::Rule::Rule_DetectChar:0x4046b250 @re=/"/, @attribute="String", @context="#pop">]>}, @itemdata={"Symbol"=>"dsNormal", "Number"=>"dsBaseN", "Comment"=>"dsComment", "BaseFunc"=>"dsNormal", "Alert"=>"dsAlert", "Decimal"=>"dsDecVal", "Normal Text"=>"dsNormal", "Keyword"=>"dsKeyword", "String"=>"dsString"}, @rules=<highlighting> ... </>>)
keeping current context Normal
consuming 't' (size = 1)
consuming ' ' (size = 1)
rule matched =: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
consuming 'dummyTable' (size = 10)
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 3: Number HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched ,: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming ' ' (size = 1)
rule matched ": String HLight::Rule::Rule_DetectChar
switching to context String
consuming 'Hello' (size = 5)
consuming ' ' (size = 1)
consuming 'world' (size = 5)
rule matched ": String HLight::Rule::Rule_DetectChar
switching back to context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
rule matched print: BaseFunc HLight::Rule::Rule_keyword
keeping current context Normal
rule matched (: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
consuming 't' (size = 1)
rule matched [: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched 3: Number HLight::Rule::Rule_RegExpr
keeping current context Normal
rule matched ]: Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
rule matched ): Symbol HLight::Rule::Rule_AnyChar
keeping current context Normal
keeping current context Normal
generating html/doc.html
